{"version":3,"sources":["Components/Header.js","Components/LeftComponent.js","Components/RightComponent.js","Components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","LeftComponent","style","backgroundColor","RightComponent","React","Component","Button","handleLeftComponent","setState","isLeftComponent","state","console","log","handleRightComponent","isRightComponent","onClick","this","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAKeA,EAFH,WAAM,OAAO,oBAAIC,UAAU,SAAd,2D,uCCUVC,MAVf,WACI,OACI,sBAAKD,UAAU,OAAOE,MAAO,CAACC,gBAAgB,aAA9C,UACI,4EACA,gEACA,kECLNC,E,4JACF,WACI,OACI,sBAAKJ,UAAU,OAAOE,MAAO,CAACC,gBAAgB,QAA9C,UACI,uEACA,gEACA,qE,GANaE,IAAMC,WAYpBF,ICmDAG,E,kDA3DX,aAAc,IAAD,8BACT,gBAQJC,oBAAoB,WAChB,EAAKC,SACD,CACIC,iBAAkB,EAAKC,MAAMD,kBAGrCE,QAAQC,IAAI,YAfH,EAkBbC,qBAAqB,WACjB,EAAKL,SACD,CACIM,kBAAmB,EAAKJ,MAAMI,mBAGtCH,QAAQC,IAAI,YArBZ,EAAKF,MAAM,CACPD,iBAAiB,EACjBK,kBAAkB,GALb,E,0CA2Bb,WACE,OAEE,qCACA,sBAAKf,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAQgB,QAASC,KAAKT,oBAAqBN,MAAO,CAACC,gBAAgB,aAAlF,SACI,yEAIJ,qBAAKH,UAAU,QAAQgB,QAASC,KAAKH,qBAAsBZ,MAAO,CAACC,gBAAgB,QAAnF,SACI,uEAMR,sBAAKH,UAAU,WAAf,UAEWiB,KAAKN,MAAMD,gBAAiB,cAAC,EAAD,IAAoB,KAIhDO,KAAKN,MAAMI,iBAAkB,cAAC,EAAD,IAAqB,e,GApDhDV,IAAMC,WCsBZY,MAvBf,WASE,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90fb13d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css'\r\n\r\nlet Header= () =>{return(<h1 className=\"shadow\">Styling Using Functional and Class Component</h1>)}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Component.css';\r\n\r\nfunction LeftComponent(){\r\n    return(\r\n        <div className='card' style={{backgroundColor:\"lightblue\"}}>\r\n            <h1>This is created using Functional Component</h1>\r\n            <p>This is done using external CSS</p>\r\n            <p>This is done using inline CSS</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftComponent;\r\n","import React from \"react\";\r\nimport './Component.css';\r\n\r\nclass RightComponent extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='card' style={{backgroundColor:\"aqua\"}}>\r\n                <h1>This is created using Class Component</h1>\r\n                <p>This is done using external CSS</p>\r\n                <p>This is done using inline CSS</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RightComponent;","import React, {Component} from 'react';\r\nimport './Button.css'\r\nimport LeftComponent from './LeftComponent';\r\nimport RightComponent from './RightComponent';\r\n\r\nclass Button extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            isLeftComponent: false,\r\n            isRightComponent: false\r\n        }\r\n    }\r\n\r\n    handleLeftComponent=()=>{\r\n        this.setState(\r\n            {\r\n                isLeftComponent: !this.state.isLeftComponent\r\n            }\r\n        )\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    handleRightComponent=()=>{\r\n        this.setState(\r\n            {\r\n                isRightComponent: !this.state.isRightComponent\r\n            }\r\n        )\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    render(){\r\n      return(\r\n\r\n        <>\r\n        <div className='parent'>\r\n            <div className='child' onClick={this.handleLeftComponent} style={{backgroundColor:\"lightblue\"}}>\r\n                <p>\r\n                    To see styling in Functional component\r\n                </p>\r\n            </div>\r\n            <div className='child' onClick={this.handleRightComponent} style={{backgroundColor:\"aqua\"}}>\r\n                <p>\r\n                To see styling in Class component\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='addStyle'>\r\n               {\r\n                   this.state.isLeftComponent? <LeftComponent /> : null\r\n               }\r\n\r\n               {\r\n                   this.state.isRightComponent? <RightComponent /> : null\r\n               }\r\n           </div>\r\n        </>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import './App.css';\nimport Header from './Components/Header'\nimport Button from './Components/Button'\n\nfunction App() {\n  // const addStyles ={\n  //   display:\"flex\",\n  //   width:\"90%\",\n  //   margin:\"0px auto\",\n  //   marginTop: \"60px\",\n  //   justifyContent:\"space-between\"\n  // }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Button />\n\n      {/* <div style={addStyles}>\n        <LeftComponent />\n        <RightComponent />\n      </div> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}